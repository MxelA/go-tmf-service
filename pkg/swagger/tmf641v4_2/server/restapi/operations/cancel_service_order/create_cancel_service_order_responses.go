// Code generated by go-swagger; DO NOT EDIT.

package cancel_service_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/MxelA/tmf-service-go/pkg/swagger/tmf641v4_2/server/models"
)

// CreateCancelServiceOrderCreatedCode is the HTTP code returned for type CreateCancelServiceOrderCreated
const CreateCancelServiceOrderCreatedCode int = 201

/*
CreateCancelServiceOrderCreated Created

swagger:response createCancelServiceOrderCreated
*/
type CreateCancelServiceOrderCreated struct {

	/*
	  In: Body
	*/
	Payload *models.CancelServiceOrder `json:"body,omitempty"`
}

// NewCreateCancelServiceOrderCreated creates CreateCancelServiceOrderCreated with default headers values
func NewCreateCancelServiceOrderCreated() *CreateCancelServiceOrderCreated {

	return &CreateCancelServiceOrderCreated{}
}

// WithPayload adds the payload to the create cancel service order created response
func (o *CreateCancelServiceOrderCreated) WithPayload(payload *models.CancelServiceOrder) *CreateCancelServiceOrderCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cancel service order created response
func (o *CreateCancelServiceOrderCreated) SetPayload(payload *models.CancelServiceOrder) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCancelServiceOrderCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCancelServiceOrderBadRequestCode is the HTTP code returned for type CreateCancelServiceOrderBadRequest
const CreateCancelServiceOrderBadRequestCode int = 400

/*
CreateCancelServiceOrderBadRequest Bad Request

swagger:response createCancelServiceOrderBadRequest
*/
type CreateCancelServiceOrderBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateCancelServiceOrderBadRequest creates CreateCancelServiceOrderBadRequest with default headers values
func NewCreateCancelServiceOrderBadRequest() *CreateCancelServiceOrderBadRequest {

	return &CreateCancelServiceOrderBadRequest{}
}

// WithPayload adds the payload to the create cancel service order bad request response
func (o *CreateCancelServiceOrderBadRequest) WithPayload(payload *models.Error) *CreateCancelServiceOrderBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cancel service order bad request response
func (o *CreateCancelServiceOrderBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCancelServiceOrderBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCancelServiceOrderUnauthorizedCode is the HTTP code returned for type CreateCancelServiceOrderUnauthorized
const CreateCancelServiceOrderUnauthorizedCode int = 401

/*
CreateCancelServiceOrderUnauthorized Unauthorized

swagger:response createCancelServiceOrderUnauthorized
*/
type CreateCancelServiceOrderUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateCancelServiceOrderUnauthorized creates CreateCancelServiceOrderUnauthorized with default headers values
func NewCreateCancelServiceOrderUnauthorized() *CreateCancelServiceOrderUnauthorized {

	return &CreateCancelServiceOrderUnauthorized{}
}

// WithPayload adds the payload to the create cancel service order unauthorized response
func (o *CreateCancelServiceOrderUnauthorized) WithPayload(payload *models.Error) *CreateCancelServiceOrderUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cancel service order unauthorized response
func (o *CreateCancelServiceOrderUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCancelServiceOrderUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCancelServiceOrderForbiddenCode is the HTTP code returned for type CreateCancelServiceOrderForbidden
const CreateCancelServiceOrderForbiddenCode int = 403

/*
CreateCancelServiceOrderForbidden Forbidden

swagger:response createCancelServiceOrderForbidden
*/
type CreateCancelServiceOrderForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateCancelServiceOrderForbidden creates CreateCancelServiceOrderForbidden with default headers values
func NewCreateCancelServiceOrderForbidden() *CreateCancelServiceOrderForbidden {

	return &CreateCancelServiceOrderForbidden{}
}

// WithPayload adds the payload to the create cancel service order forbidden response
func (o *CreateCancelServiceOrderForbidden) WithPayload(payload *models.Error) *CreateCancelServiceOrderForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cancel service order forbidden response
func (o *CreateCancelServiceOrderForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCancelServiceOrderForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCancelServiceOrderMethodNotAllowedCode is the HTTP code returned for type CreateCancelServiceOrderMethodNotAllowed
const CreateCancelServiceOrderMethodNotAllowedCode int = 405

/*
CreateCancelServiceOrderMethodNotAllowed Method Not allowed

swagger:response createCancelServiceOrderMethodNotAllowed
*/
type CreateCancelServiceOrderMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateCancelServiceOrderMethodNotAllowed creates CreateCancelServiceOrderMethodNotAllowed with default headers values
func NewCreateCancelServiceOrderMethodNotAllowed() *CreateCancelServiceOrderMethodNotAllowed {

	return &CreateCancelServiceOrderMethodNotAllowed{}
}

// WithPayload adds the payload to the create cancel service order method not allowed response
func (o *CreateCancelServiceOrderMethodNotAllowed) WithPayload(payload *models.Error) *CreateCancelServiceOrderMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cancel service order method not allowed response
func (o *CreateCancelServiceOrderMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCancelServiceOrderMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCancelServiceOrderConflictCode is the HTTP code returned for type CreateCancelServiceOrderConflict
const CreateCancelServiceOrderConflictCode int = 409

/*
CreateCancelServiceOrderConflict Conflict

swagger:response createCancelServiceOrderConflict
*/
type CreateCancelServiceOrderConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateCancelServiceOrderConflict creates CreateCancelServiceOrderConflict with default headers values
func NewCreateCancelServiceOrderConflict() *CreateCancelServiceOrderConflict {

	return &CreateCancelServiceOrderConflict{}
}

// WithPayload adds the payload to the create cancel service order conflict response
func (o *CreateCancelServiceOrderConflict) WithPayload(payload *models.Error) *CreateCancelServiceOrderConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cancel service order conflict response
func (o *CreateCancelServiceOrderConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCancelServiceOrderConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCancelServiceOrderInternalServerErrorCode is the HTTP code returned for type CreateCancelServiceOrderInternalServerError
const CreateCancelServiceOrderInternalServerErrorCode int = 500

/*
CreateCancelServiceOrderInternalServerError Internal Server Error

swagger:response createCancelServiceOrderInternalServerError
*/
type CreateCancelServiceOrderInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateCancelServiceOrderInternalServerError creates CreateCancelServiceOrderInternalServerError with default headers values
func NewCreateCancelServiceOrderInternalServerError() *CreateCancelServiceOrderInternalServerError {

	return &CreateCancelServiceOrderInternalServerError{}
}

// WithPayload adds the payload to the create cancel service order internal server error response
func (o *CreateCancelServiceOrderInternalServerError) WithPayload(payload *models.Error) *CreateCancelServiceOrderInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create cancel service order internal server error response
func (o *CreateCancelServiceOrderInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCancelServiceOrderInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
