// Code generated by go-swagger; DO NOT EDIT.

package cancel_service_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	"github.com/MxelA/tmf-service-go/pkg/swagger/tmf641v4_2/server/models"
)

// ListCancelServiceOrderOKCode is the HTTP code returned for type ListCancelServiceOrderOK
const ListCancelServiceOrderOKCode int = 200

/*
ListCancelServiceOrderOK Success

swagger:response listCancelServiceOrderOK
*/
type ListCancelServiceOrderOK struct {
	/*Actual number of items returned in the response body

	 */
	XResultCount int64 `json:"X-Result-Count"`
	/*Total number of items matching criteria

	 */
	XTotalCount int64 `json:"X-Total-Count"`

	/*
	  In: Body
	*/
	Payload []*models.CancelServiceOrder `json:"body,omitempty"`
}

// NewListCancelServiceOrderOK creates ListCancelServiceOrderOK with default headers values
func NewListCancelServiceOrderOK() *ListCancelServiceOrderOK {

	return &ListCancelServiceOrderOK{}
}

// WithXResultCount adds the xResultCount to the list cancel service order o k response
func (o *ListCancelServiceOrderOK) WithXResultCount(xResultCount int64) *ListCancelServiceOrderOK {
	o.XResultCount = xResultCount
	return o
}

// SetXResultCount sets the xResultCount to the list cancel service order o k response
func (o *ListCancelServiceOrderOK) SetXResultCount(xResultCount int64) {
	o.XResultCount = xResultCount
}

// WithXTotalCount adds the xTotalCount to the list cancel service order o k response
func (o *ListCancelServiceOrderOK) WithXTotalCount(xTotalCount int64) *ListCancelServiceOrderOK {
	o.XTotalCount = xTotalCount
	return o
}

// SetXTotalCount sets the xTotalCount to the list cancel service order o k response
func (o *ListCancelServiceOrderOK) SetXTotalCount(xTotalCount int64) {
	o.XTotalCount = xTotalCount
}

// WithPayload adds the payload to the list cancel service order o k response
func (o *ListCancelServiceOrderOK) WithPayload(payload []*models.CancelServiceOrder) *ListCancelServiceOrderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cancel service order o k response
func (o *ListCancelServiceOrderOK) SetPayload(payload []*models.CancelServiceOrder) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCancelServiceOrderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Result-Count

	xResultCount := swag.FormatInt64(o.XResultCount)
	if xResultCount != "" {
		rw.Header().Set("X-Result-Count", xResultCount)
	}

	// response header X-Total-Count

	xTotalCount := swag.FormatInt64(o.XTotalCount)
	if xTotalCount != "" {
		rw.Header().Set("X-Total-Count", xTotalCount)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.CancelServiceOrder, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListCancelServiceOrderBadRequestCode is the HTTP code returned for type ListCancelServiceOrderBadRequest
const ListCancelServiceOrderBadRequestCode int = 400

/*
ListCancelServiceOrderBadRequest Bad Request

swagger:response listCancelServiceOrderBadRequest
*/
type ListCancelServiceOrderBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListCancelServiceOrderBadRequest creates ListCancelServiceOrderBadRequest with default headers values
func NewListCancelServiceOrderBadRequest() *ListCancelServiceOrderBadRequest {

	return &ListCancelServiceOrderBadRequest{}
}

// WithPayload adds the payload to the list cancel service order bad request response
func (o *ListCancelServiceOrderBadRequest) WithPayload(payload *models.Error) *ListCancelServiceOrderBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cancel service order bad request response
func (o *ListCancelServiceOrderBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCancelServiceOrderBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListCancelServiceOrderUnauthorizedCode is the HTTP code returned for type ListCancelServiceOrderUnauthorized
const ListCancelServiceOrderUnauthorizedCode int = 401

/*
ListCancelServiceOrderUnauthorized Unauthorized

swagger:response listCancelServiceOrderUnauthorized
*/
type ListCancelServiceOrderUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListCancelServiceOrderUnauthorized creates ListCancelServiceOrderUnauthorized with default headers values
func NewListCancelServiceOrderUnauthorized() *ListCancelServiceOrderUnauthorized {

	return &ListCancelServiceOrderUnauthorized{}
}

// WithPayload adds the payload to the list cancel service order unauthorized response
func (o *ListCancelServiceOrderUnauthorized) WithPayload(payload *models.Error) *ListCancelServiceOrderUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cancel service order unauthorized response
func (o *ListCancelServiceOrderUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCancelServiceOrderUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListCancelServiceOrderForbiddenCode is the HTTP code returned for type ListCancelServiceOrderForbidden
const ListCancelServiceOrderForbiddenCode int = 403

/*
ListCancelServiceOrderForbidden Forbidden

swagger:response listCancelServiceOrderForbidden
*/
type ListCancelServiceOrderForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListCancelServiceOrderForbidden creates ListCancelServiceOrderForbidden with default headers values
func NewListCancelServiceOrderForbidden() *ListCancelServiceOrderForbidden {

	return &ListCancelServiceOrderForbidden{}
}

// WithPayload adds the payload to the list cancel service order forbidden response
func (o *ListCancelServiceOrderForbidden) WithPayload(payload *models.Error) *ListCancelServiceOrderForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cancel service order forbidden response
func (o *ListCancelServiceOrderForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCancelServiceOrderForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListCancelServiceOrderNotFoundCode is the HTTP code returned for type ListCancelServiceOrderNotFound
const ListCancelServiceOrderNotFoundCode int = 404

/*
ListCancelServiceOrderNotFound Not Found

swagger:response listCancelServiceOrderNotFound
*/
type ListCancelServiceOrderNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListCancelServiceOrderNotFound creates ListCancelServiceOrderNotFound with default headers values
func NewListCancelServiceOrderNotFound() *ListCancelServiceOrderNotFound {

	return &ListCancelServiceOrderNotFound{}
}

// WithPayload adds the payload to the list cancel service order not found response
func (o *ListCancelServiceOrderNotFound) WithPayload(payload *models.Error) *ListCancelServiceOrderNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cancel service order not found response
func (o *ListCancelServiceOrderNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCancelServiceOrderNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListCancelServiceOrderMethodNotAllowedCode is the HTTP code returned for type ListCancelServiceOrderMethodNotAllowed
const ListCancelServiceOrderMethodNotAllowedCode int = 405

/*
ListCancelServiceOrderMethodNotAllowed Method Not allowed

swagger:response listCancelServiceOrderMethodNotAllowed
*/
type ListCancelServiceOrderMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListCancelServiceOrderMethodNotAllowed creates ListCancelServiceOrderMethodNotAllowed with default headers values
func NewListCancelServiceOrderMethodNotAllowed() *ListCancelServiceOrderMethodNotAllowed {

	return &ListCancelServiceOrderMethodNotAllowed{}
}

// WithPayload adds the payload to the list cancel service order method not allowed response
func (o *ListCancelServiceOrderMethodNotAllowed) WithPayload(payload *models.Error) *ListCancelServiceOrderMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cancel service order method not allowed response
func (o *ListCancelServiceOrderMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCancelServiceOrderMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListCancelServiceOrderConflictCode is the HTTP code returned for type ListCancelServiceOrderConflict
const ListCancelServiceOrderConflictCode int = 409

/*
ListCancelServiceOrderConflict Conflict

swagger:response listCancelServiceOrderConflict
*/
type ListCancelServiceOrderConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListCancelServiceOrderConflict creates ListCancelServiceOrderConflict with default headers values
func NewListCancelServiceOrderConflict() *ListCancelServiceOrderConflict {

	return &ListCancelServiceOrderConflict{}
}

// WithPayload adds the payload to the list cancel service order conflict response
func (o *ListCancelServiceOrderConflict) WithPayload(payload *models.Error) *ListCancelServiceOrderConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cancel service order conflict response
func (o *ListCancelServiceOrderConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCancelServiceOrderConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListCancelServiceOrderInternalServerErrorCode is the HTTP code returned for type ListCancelServiceOrderInternalServerError
const ListCancelServiceOrderInternalServerErrorCode int = 500

/*
ListCancelServiceOrderInternalServerError Internal Server Error

swagger:response listCancelServiceOrderInternalServerError
*/
type ListCancelServiceOrderInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListCancelServiceOrderInternalServerError creates ListCancelServiceOrderInternalServerError with default headers values
func NewListCancelServiceOrderInternalServerError() *ListCancelServiceOrderInternalServerError {

	return &ListCancelServiceOrderInternalServerError{}
}

// WithPayload adds the payload to the list cancel service order internal server error response
func (o *ListCancelServiceOrderInternalServerError) WithPayload(payload *models.Error) *ListCancelServiceOrderInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cancel service order internal server error response
func (o *ListCancelServiceOrderInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCancelServiceOrderInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
