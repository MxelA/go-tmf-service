// Code generated by go-swagger; DO NOT EDIT.

package notification_listeners_client_side

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/MxelA/tmf-service-go/pkg/swagger/tmf641v4_2/server/models"
)

// ListenToCancelServiceOrderCreateEventCreatedCode is the HTTP code returned for type ListenToCancelServiceOrderCreateEventCreated
const ListenToCancelServiceOrderCreateEventCreatedCode int = 201

/*
ListenToCancelServiceOrderCreateEventCreated Notified

swagger:response listenToCancelServiceOrderCreateEventCreated
*/
type ListenToCancelServiceOrderCreateEventCreated struct {

	/*
	  In: Body
	*/
	Payload *models.EventSubscription `json:"body,omitempty"`
}

// NewListenToCancelServiceOrderCreateEventCreated creates ListenToCancelServiceOrderCreateEventCreated with default headers values
func NewListenToCancelServiceOrderCreateEventCreated() *ListenToCancelServiceOrderCreateEventCreated {

	return &ListenToCancelServiceOrderCreateEventCreated{}
}

// WithPayload adds the payload to the listen to cancel service order create event created response
func (o *ListenToCancelServiceOrderCreateEventCreated) WithPayload(payload *models.EventSubscription) *ListenToCancelServiceOrderCreateEventCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to cancel service order create event created response
func (o *ListenToCancelServiceOrderCreateEventCreated) SetPayload(payload *models.EventSubscription) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToCancelServiceOrderCreateEventCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListenToCancelServiceOrderCreateEventBadRequestCode is the HTTP code returned for type ListenToCancelServiceOrderCreateEventBadRequest
const ListenToCancelServiceOrderCreateEventBadRequestCode int = 400

/*
ListenToCancelServiceOrderCreateEventBadRequest Bad Request

swagger:response listenToCancelServiceOrderCreateEventBadRequest
*/
type ListenToCancelServiceOrderCreateEventBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListenToCancelServiceOrderCreateEventBadRequest creates ListenToCancelServiceOrderCreateEventBadRequest with default headers values
func NewListenToCancelServiceOrderCreateEventBadRequest() *ListenToCancelServiceOrderCreateEventBadRequest {

	return &ListenToCancelServiceOrderCreateEventBadRequest{}
}

// WithPayload adds the payload to the listen to cancel service order create event bad request response
func (o *ListenToCancelServiceOrderCreateEventBadRequest) WithPayload(payload *models.Error) *ListenToCancelServiceOrderCreateEventBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to cancel service order create event bad request response
func (o *ListenToCancelServiceOrderCreateEventBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToCancelServiceOrderCreateEventBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListenToCancelServiceOrderCreateEventUnauthorizedCode is the HTTP code returned for type ListenToCancelServiceOrderCreateEventUnauthorized
const ListenToCancelServiceOrderCreateEventUnauthorizedCode int = 401

/*
ListenToCancelServiceOrderCreateEventUnauthorized Unauthorized

swagger:response listenToCancelServiceOrderCreateEventUnauthorized
*/
type ListenToCancelServiceOrderCreateEventUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListenToCancelServiceOrderCreateEventUnauthorized creates ListenToCancelServiceOrderCreateEventUnauthorized with default headers values
func NewListenToCancelServiceOrderCreateEventUnauthorized() *ListenToCancelServiceOrderCreateEventUnauthorized {

	return &ListenToCancelServiceOrderCreateEventUnauthorized{}
}

// WithPayload adds the payload to the listen to cancel service order create event unauthorized response
func (o *ListenToCancelServiceOrderCreateEventUnauthorized) WithPayload(payload *models.Error) *ListenToCancelServiceOrderCreateEventUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to cancel service order create event unauthorized response
func (o *ListenToCancelServiceOrderCreateEventUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToCancelServiceOrderCreateEventUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListenToCancelServiceOrderCreateEventForbiddenCode is the HTTP code returned for type ListenToCancelServiceOrderCreateEventForbidden
const ListenToCancelServiceOrderCreateEventForbiddenCode int = 403

/*
ListenToCancelServiceOrderCreateEventForbidden Forbidden

swagger:response listenToCancelServiceOrderCreateEventForbidden
*/
type ListenToCancelServiceOrderCreateEventForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListenToCancelServiceOrderCreateEventForbidden creates ListenToCancelServiceOrderCreateEventForbidden with default headers values
func NewListenToCancelServiceOrderCreateEventForbidden() *ListenToCancelServiceOrderCreateEventForbidden {

	return &ListenToCancelServiceOrderCreateEventForbidden{}
}

// WithPayload adds the payload to the listen to cancel service order create event forbidden response
func (o *ListenToCancelServiceOrderCreateEventForbidden) WithPayload(payload *models.Error) *ListenToCancelServiceOrderCreateEventForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to cancel service order create event forbidden response
func (o *ListenToCancelServiceOrderCreateEventForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToCancelServiceOrderCreateEventForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListenToCancelServiceOrderCreateEventNotFoundCode is the HTTP code returned for type ListenToCancelServiceOrderCreateEventNotFound
const ListenToCancelServiceOrderCreateEventNotFoundCode int = 404

/*
ListenToCancelServiceOrderCreateEventNotFound Not Found

swagger:response listenToCancelServiceOrderCreateEventNotFound
*/
type ListenToCancelServiceOrderCreateEventNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListenToCancelServiceOrderCreateEventNotFound creates ListenToCancelServiceOrderCreateEventNotFound with default headers values
func NewListenToCancelServiceOrderCreateEventNotFound() *ListenToCancelServiceOrderCreateEventNotFound {

	return &ListenToCancelServiceOrderCreateEventNotFound{}
}

// WithPayload adds the payload to the listen to cancel service order create event not found response
func (o *ListenToCancelServiceOrderCreateEventNotFound) WithPayload(payload *models.Error) *ListenToCancelServiceOrderCreateEventNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to cancel service order create event not found response
func (o *ListenToCancelServiceOrderCreateEventNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToCancelServiceOrderCreateEventNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListenToCancelServiceOrderCreateEventMethodNotAllowedCode is the HTTP code returned for type ListenToCancelServiceOrderCreateEventMethodNotAllowed
const ListenToCancelServiceOrderCreateEventMethodNotAllowedCode int = 405

/*
ListenToCancelServiceOrderCreateEventMethodNotAllowed Method Not allowed

swagger:response listenToCancelServiceOrderCreateEventMethodNotAllowed
*/
type ListenToCancelServiceOrderCreateEventMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListenToCancelServiceOrderCreateEventMethodNotAllowed creates ListenToCancelServiceOrderCreateEventMethodNotAllowed with default headers values
func NewListenToCancelServiceOrderCreateEventMethodNotAllowed() *ListenToCancelServiceOrderCreateEventMethodNotAllowed {

	return &ListenToCancelServiceOrderCreateEventMethodNotAllowed{}
}

// WithPayload adds the payload to the listen to cancel service order create event method not allowed response
func (o *ListenToCancelServiceOrderCreateEventMethodNotAllowed) WithPayload(payload *models.Error) *ListenToCancelServiceOrderCreateEventMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to cancel service order create event method not allowed response
func (o *ListenToCancelServiceOrderCreateEventMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToCancelServiceOrderCreateEventMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListenToCancelServiceOrderCreateEventConflictCode is the HTTP code returned for type ListenToCancelServiceOrderCreateEventConflict
const ListenToCancelServiceOrderCreateEventConflictCode int = 409

/*
ListenToCancelServiceOrderCreateEventConflict Conflict

swagger:response listenToCancelServiceOrderCreateEventConflict
*/
type ListenToCancelServiceOrderCreateEventConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListenToCancelServiceOrderCreateEventConflict creates ListenToCancelServiceOrderCreateEventConflict with default headers values
func NewListenToCancelServiceOrderCreateEventConflict() *ListenToCancelServiceOrderCreateEventConflict {

	return &ListenToCancelServiceOrderCreateEventConflict{}
}

// WithPayload adds the payload to the listen to cancel service order create event conflict response
func (o *ListenToCancelServiceOrderCreateEventConflict) WithPayload(payload *models.Error) *ListenToCancelServiceOrderCreateEventConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to cancel service order create event conflict response
func (o *ListenToCancelServiceOrderCreateEventConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToCancelServiceOrderCreateEventConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListenToCancelServiceOrderCreateEventInternalServerErrorCode is the HTTP code returned for type ListenToCancelServiceOrderCreateEventInternalServerError
const ListenToCancelServiceOrderCreateEventInternalServerErrorCode int = 500

/*
ListenToCancelServiceOrderCreateEventInternalServerError Internal Server Error

swagger:response listenToCancelServiceOrderCreateEventInternalServerError
*/
type ListenToCancelServiceOrderCreateEventInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListenToCancelServiceOrderCreateEventInternalServerError creates ListenToCancelServiceOrderCreateEventInternalServerError with default headers values
func NewListenToCancelServiceOrderCreateEventInternalServerError() *ListenToCancelServiceOrderCreateEventInternalServerError {

	return &ListenToCancelServiceOrderCreateEventInternalServerError{}
}

// WithPayload adds the payload to the listen to cancel service order create event internal server error response
func (o *ListenToCancelServiceOrderCreateEventInternalServerError) WithPayload(payload *models.Error) *ListenToCancelServiceOrderCreateEventInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to cancel service order create event internal server error response
func (o *ListenToCancelServiceOrderCreateEventInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToCancelServiceOrderCreateEventInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
