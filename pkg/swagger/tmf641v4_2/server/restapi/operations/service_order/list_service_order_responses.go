// Code generated by go-swagger; DO NOT EDIT.

package service_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	"github.com/MxelA/tmf-service-go/pkg/swagger/tmf641v4_2/server/models"
)

// ListServiceOrderOKCode is the HTTP code returned for type ListServiceOrderOK
const ListServiceOrderOKCode int = 200

/*
ListServiceOrderOK Success

swagger:response listServiceOrderOK
*/
type ListServiceOrderOK struct {
	/*Actual number of items returned in the response body

	 */
	XResultCount int64 `json:"X-Result-Count"`
	/*Total number of items matching criteria

	 */
	XTotalCount int64 `json:"X-Total-Count"`

	/*
	  In: Body
	*/
	Payload []*models.ServiceOrder `json:"body,omitempty"`
}

// NewListServiceOrderOK creates ListServiceOrderOK with default headers values
func NewListServiceOrderOK() *ListServiceOrderOK {

	return &ListServiceOrderOK{}
}

// WithXResultCount adds the xResultCount to the list service order o k response
func (o *ListServiceOrderOK) WithXResultCount(xResultCount int64) *ListServiceOrderOK {
	o.XResultCount = xResultCount
	return o
}

// SetXResultCount sets the xResultCount to the list service order o k response
func (o *ListServiceOrderOK) SetXResultCount(xResultCount int64) {
	o.XResultCount = xResultCount
}

// WithXTotalCount adds the xTotalCount to the list service order o k response
func (o *ListServiceOrderOK) WithXTotalCount(xTotalCount int64) *ListServiceOrderOK {
	o.XTotalCount = xTotalCount
	return o
}

// SetXTotalCount sets the xTotalCount to the list service order o k response
func (o *ListServiceOrderOK) SetXTotalCount(xTotalCount int64) {
	o.XTotalCount = xTotalCount
}

// WithPayload adds the payload to the list service order o k response
func (o *ListServiceOrderOK) WithPayload(payload []*models.ServiceOrder) *ListServiceOrderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service order o k response
func (o *ListServiceOrderOK) SetPayload(payload []*models.ServiceOrder) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServiceOrderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Result-Count

	xResultCount := swag.FormatInt64(o.XResultCount)
	if xResultCount != "" {
		rw.Header().Set("X-Result-Count", xResultCount)
	}

	// response header X-Total-Count

	xTotalCount := swag.FormatInt64(o.XTotalCount)
	if xTotalCount != "" {
		rw.Header().Set("X-Total-Count", xTotalCount)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ServiceOrder, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListServiceOrderBadRequestCode is the HTTP code returned for type ListServiceOrderBadRequest
const ListServiceOrderBadRequestCode int = 400

/*
ListServiceOrderBadRequest Bad Request

swagger:response listServiceOrderBadRequest
*/
type ListServiceOrderBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListServiceOrderBadRequest creates ListServiceOrderBadRequest with default headers values
func NewListServiceOrderBadRequest() *ListServiceOrderBadRequest {

	return &ListServiceOrderBadRequest{}
}

// WithPayload adds the payload to the list service order bad request response
func (o *ListServiceOrderBadRequest) WithPayload(payload *models.Error) *ListServiceOrderBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service order bad request response
func (o *ListServiceOrderBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServiceOrderBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListServiceOrderUnauthorizedCode is the HTTP code returned for type ListServiceOrderUnauthorized
const ListServiceOrderUnauthorizedCode int = 401

/*
ListServiceOrderUnauthorized Unauthorized

swagger:response listServiceOrderUnauthorized
*/
type ListServiceOrderUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListServiceOrderUnauthorized creates ListServiceOrderUnauthorized with default headers values
func NewListServiceOrderUnauthorized() *ListServiceOrderUnauthorized {

	return &ListServiceOrderUnauthorized{}
}

// WithPayload adds the payload to the list service order unauthorized response
func (o *ListServiceOrderUnauthorized) WithPayload(payload *models.Error) *ListServiceOrderUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service order unauthorized response
func (o *ListServiceOrderUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServiceOrderUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListServiceOrderForbiddenCode is the HTTP code returned for type ListServiceOrderForbidden
const ListServiceOrderForbiddenCode int = 403

/*
ListServiceOrderForbidden Forbidden

swagger:response listServiceOrderForbidden
*/
type ListServiceOrderForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListServiceOrderForbidden creates ListServiceOrderForbidden with default headers values
func NewListServiceOrderForbidden() *ListServiceOrderForbidden {

	return &ListServiceOrderForbidden{}
}

// WithPayload adds the payload to the list service order forbidden response
func (o *ListServiceOrderForbidden) WithPayload(payload *models.Error) *ListServiceOrderForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service order forbidden response
func (o *ListServiceOrderForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServiceOrderForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListServiceOrderNotFoundCode is the HTTP code returned for type ListServiceOrderNotFound
const ListServiceOrderNotFoundCode int = 404

/*
ListServiceOrderNotFound Not Found

swagger:response listServiceOrderNotFound
*/
type ListServiceOrderNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListServiceOrderNotFound creates ListServiceOrderNotFound with default headers values
func NewListServiceOrderNotFound() *ListServiceOrderNotFound {

	return &ListServiceOrderNotFound{}
}

// WithPayload adds the payload to the list service order not found response
func (o *ListServiceOrderNotFound) WithPayload(payload *models.Error) *ListServiceOrderNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service order not found response
func (o *ListServiceOrderNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServiceOrderNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListServiceOrderMethodNotAllowedCode is the HTTP code returned for type ListServiceOrderMethodNotAllowed
const ListServiceOrderMethodNotAllowedCode int = 405

/*
ListServiceOrderMethodNotAllowed Method Not allowed

swagger:response listServiceOrderMethodNotAllowed
*/
type ListServiceOrderMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListServiceOrderMethodNotAllowed creates ListServiceOrderMethodNotAllowed with default headers values
func NewListServiceOrderMethodNotAllowed() *ListServiceOrderMethodNotAllowed {

	return &ListServiceOrderMethodNotAllowed{}
}

// WithPayload adds the payload to the list service order method not allowed response
func (o *ListServiceOrderMethodNotAllowed) WithPayload(payload *models.Error) *ListServiceOrderMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service order method not allowed response
func (o *ListServiceOrderMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServiceOrderMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListServiceOrderConflictCode is the HTTP code returned for type ListServiceOrderConflict
const ListServiceOrderConflictCode int = 409

/*
ListServiceOrderConflict Conflict

swagger:response listServiceOrderConflict
*/
type ListServiceOrderConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListServiceOrderConflict creates ListServiceOrderConflict with default headers values
func NewListServiceOrderConflict() *ListServiceOrderConflict {

	return &ListServiceOrderConflict{}
}

// WithPayload adds the payload to the list service order conflict response
func (o *ListServiceOrderConflict) WithPayload(payload *models.Error) *ListServiceOrderConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service order conflict response
func (o *ListServiceOrderConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServiceOrderConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListServiceOrderInternalServerErrorCode is the HTTP code returned for type ListServiceOrderInternalServerError
const ListServiceOrderInternalServerErrorCode int = 500

/*
ListServiceOrderInternalServerError Internal Server Error

swagger:response listServiceOrderInternalServerError
*/
type ListServiceOrderInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListServiceOrderInternalServerError creates ListServiceOrderInternalServerError with default headers values
func NewListServiceOrderInternalServerError() *ListServiceOrderInternalServerError {

	return &ListServiceOrderInternalServerError{}
}

// WithPayload adds the payload to the list service order internal server error response
func (o *ListServiceOrderInternalServerError) WithPayload(payload *models.Error) *ListServiceOrderInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service order internal server error response
func (o *ListServiceOrderInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServiceOrderInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
